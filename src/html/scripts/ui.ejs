
const optionsVal = [{id: "channel", type: "select"}, {id: "wipe", type: "checkbox", note: true}];
const viewsExeptions = {
  switch: () => {
    userText.set("install-header", "Ready to switch to ubports");
    $("#btn-inst").text("Switch to UBports");
    $("#switch-note").show();
    show("views", "install");
    userText.set("modal-install-title", "Read before switching!");
    switchHide("modal-install-body", "modal-install-body-switch");
    switchHide("installing-text", "installing-text-switch");
  }
}

const switchHide = (from, to) => {
  $("."+from).hide();
  $("."+to).show();
}

const hideAll = (id) => {
    $("."+id).hide();
}

const show = (cat, id) => {
    hideAll(cat);
    $("#"+cat+"-"+id).show();
}

const setText = (cat, id, text) => {
  $("."+cat+"-"+id).text(text);
}

const getValue = (cat, id) => {
  return $("#"+cat+"-"+id).val();
}

const views = {
    hideAll: () => hideAll("views"),
    show: id => {
      if (viewsExeptions[id]){
        viewsExeptions[id]()
        return;
      }
      show("views", id)
    }
}

const userText = {
    set: (id, text) => setText("user", id, text),
    remove: id => setText("user", id, "")
}

const modals = {
    bind: modal => {
      $("#btn-modal-"+modal).click(() => {
        $('#'+modal+'-modal').modal('show');
      })
    },
    show: modal => {
      $('#'+modal+'-modal').modal('show');
    },
    hide: modal => {
      $('#'+modal+'-modal').modal('hide');
    }
}

const getOptionVal = (option, raw) => {
  var ret = false;
  optionsVal.forEach((optionVal) => {
    if (optionVal.id === option) {
      switch (optionVal.type) {
        case "select":
          ret = raw ? $("#options-" + optionVal.id).find(":selected").val() :
                      $("#options-" + optionVal.id).find(":selected").text();
          break;
        case "checkbox":
          ret = $("#options-" + optionVal.id).is(':checked')
          if (!raw)
            ret = ret ? "Yes" : "No";
          break;
        default:
          console.log("default", optionVal);
          ret = $("#options-" + optionVal.id).val()
          break;
      }
    }
  });
  return ret;
}

const optionsValToUser = () => {
  optionsVal.forEach(option => {
    userText.set(option.id, getOptionVal(option.id));
  })
}

const options = {
    get: getOptionVal,
    init: () => {
      $("#btn-options-close").click(() => {
        optionsValToUser();
      })
      $("#options-wipe").change(() => {
        if (getOptionVal("wipe", true)) {
          $("#options-wipe-note").show();
          switchHide("modal-install-body-no-wipe", "modal-install-body-wipe");
        } else {
          $("#options-wipe-note").hide();
          switchHide("modal-install-body-wipe", "modal-install-body-no-wipe");
        }
      });
    },
    optionsValToUser: optionsValToUser
}
